
HTML : HyperText Markup Language

- Internet : 전 세계에 분산되어 있는 각 네트워크를 묶어서 만든 거대한 네트워크
  Internet != HTTP(Web)

- Internet Protocol : 인터넷을 사용하기 위해 지켜야하는 규칙이나 약속, 규약

  - HTTP : HyperText Transfer Protocol
            하이퍼텍스트를 주고받는 프로토콜
            하이퍼텍스트도 텍스트의 일종이며,
            자바 소켓을 이용하여 문자열을 주고받는 과정과 크게 다르지 않다

- Web Server : 클라이언트의 요청에 따라서, 하이퍼텍스트 문자열을 클라이언트에게 전달 (서버)
                Apache, IIS, nginX, Tomcat

- Web Brower : 웹 서버에 접속해서 하이퍼텍스트를 받아와서, 화면을 구현하는 프로그램 (클라이언트)
                Internet Explore, Edge, Chrome, Opera, Safari, Whale...
                
- HTML : HyperText Markup Language, 하이퍼텍스트로 구성된 문서를 만들 수 있는 언어
        뼈대를 구성하는(Markup) 언어(Language)
        fxml(fx의 Markup Language)

- HyperText : 단순 텍스트와 달리, 문서와 문서간의 연결고리(링크)에 의해 
                어떤 문서가 다른 문서를 참조하여 이동할 수 있는 형식
                + @ 미디어를 포함할 수 있다

상황예시)   소설 및 만화책을 오프라인에서 책으로 보면 1권 이후 2권을 가져와서 봐야하지만
            링크로 구성된 문서라면 1권 마지막에 2권으로 향하는 링크를 클릭해서
            별도의 파일 열기 과정 없이 쭉 이어나갈 수 있으며, 이전, 다음 같은 링크도 있어서
            문서와 문서가 서로 연결되어있다

팀 버너스리 - 구글링, 위키백과 검색해보세요 ~

HTML 은 태그라는 형식을 사용하여 문서를 구성하여 
각 태그는 일반적으로 시작태그와 마무리태그가 존재하며
시작태그와 마무리 태그 사이의 '영역'이 발생하고
해당 영역에 다른 태그를 넣거나, 글자를 넣을 수 있다

태그는 속성을 가질 수 있으며, 다음과 같은 문법 규칙을 가진다

<태그 속성1="값1" 속성2="값2">
    영역 내부의 데이터
</태그>

태그이름과 속성은 띄워쓰기로 구분하며, 값은 특별한 문제가 없다면 쌍따옴표로 묶어준다

만약 내용이 없고 시작하면서 동시에 마무리처리하려면
    <태그 속성1="값1" /> 와 같이 사용한다

Web에서 FrontEnd의 3대 구성요소는 

HTML        : 요소를 만들어낸다 (뼈대를 구성한다) - 정적
CSS         : 외형을 관리한다 (색상, 정렬, 크기...)
javascript  : 동작을 관리한다 (이벤트 함수, 팝업...)